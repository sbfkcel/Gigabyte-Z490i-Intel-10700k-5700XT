
/* Class = "NSTextFieldCell"; title = "SmcVersion"; ObjectID = "01x-DY-Yh2"; */
"01x-DY-Yh2.title" = "SmcVersion";

/* Class = "NSTabViewItem"; label = "DataHub - Generic - PlatformNVRAM"; ObjectID = "0SG-Wz-rih"; */
"0SG-Wz-rih.label" = "DataHub - Generic - PlatformNVRAM";

/* Class = "NSTextFieldCell"; title = "UpdateSMBIOSMode"; ObjectID = "0uc-j4-cpH"; */
"0uc-j4-cpH.title" = "UpdateSMBIOSMode";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Use raw encoding for SMBIOS UUIDs.\n\nEach UUID AABBCCDD-EEFF-GGHH-IIJJ-KKLLMMNNOOPP is essentially a hexadecimal 16-byte number. It can be encoded in two ways:\n• Big Endian — by writing all the bytes as they are without making any order changes ({AA BB CC DD EE FF GG HH II JJ KK LL MM NN OO PP}). This method is also known as RFC 4122 encoding or Raw encoding.\n• Little Endian — by interpreting the bytes as numbers and using Little Endian byte representation ({DD CC BB AA FF EE HH GG II JJ KK LL MM NN OO PP}).\n\nThe SMBIOS specification did not explicitly specify the encoding format for the UUID up to SMBIOS 2.6, where it stated that Little Endian encoding shall be used. This led to the confusion in both firmware implementations and system software as different vendors used different encodings prior to that.\n• Apple uses the Big Endian format everywhere but it ignores SMBIOS UUID within macOS.\n• dmidecode uses the Big Endian format for SMBIOS 2.5.x or lower and the Little Endian format for 2.6 and newer.\nAcidanthera dmidecode prints all the three.\n• Windows uses the Little Endian format everywhere, but this only affects the visual representation of the values.\n\nOpenCore always sets a recent SMBIOS version (currently 3.2) when generating the modified DMI tables. If UseRawUuidEncoding is enabled, the Big Endian format is used to store the SystemUUID data. Otherwise, the Little Endian format is used.\n\nNote: This preference does not affect UUIDs used in DataHub and NVRAM as they are not standardised and are added by Apple. Unlike SMBIOS, they are always stored in the Big Endian format."; ObjectID = "1BR-wt-792"; */
"1BR-wt-792.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Use raw encoding for SMBIOS UUIDs.\n\nEach UUID AABBCCDD-EEFF-GGHH-IIJJ-KKLLMMNNOOPP is essentially a hexadecimal 16-byte number. It can be encoded in two ways:\n• Big Endian — by writing all the bytes as they are without making any order changes ({AA BB CC DD EE FF GG HH II JJ KK LL MM NN OO PP}). This method is also known as RFC 4122 encoding or Raw encoding.\n• Little Endian — by interpreting the bytes as numbers and using Little Endian byte representation ({DD CC BB AA FF EE HH GG II JJ KK LL MM NN OO PP}).\n\nThe SMBIOS specification did not explicitly specify the encoding format for the UUID up to SMBIOS 2.6, where it stated that Little Endian encoding shall be used. This led to the confusion in both firmware implementations and system software as different vendors used different encodings prior to that.\n• Apple uses the Big Endian format everywhere but it ignores SMBIOS UUID within macOS.\n• dmidecode uses the Big Endian format for SMBIOS 2.5.x or lower and the Little Endian format for 2.6 and newer.\nAcidanthera dmidecode prints all the three.\n• Windows uses the Little Endian format everywhere, but this only affects the visual representation of the values.\n\nOpenCore always sets a recent SMBIOS version (currently 3.2) when generating the modified DMI tables. If UseRawUuidEncoding is enabled, the Big Endian format is used to store the SystemUUID data. Otherwise, the Little Endian format is used.\n\nNote: This preference does not affect UUIDs used in DataHub and NVRAM as they are not standardised and are added by Apple. Unlike SMBIOS, they are always stored in the Big Endian format.";

/* Class = "NSTextFieldCell"; title = "ROM"; ObjectID = "1Sc-Fb-KaM"; */
"1Sc-Fb-KaM.title" = "ROM";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 64-bit\nFailsafe: 0\nDescription: Sets InitialTSC in gEfiProcessorSubClassGuid. Sets initial TSC value, normally 0."; ObjectID = "2Oj-go-m5S"; */
"2Oj-go-m5S.ibShadowedToolTip" = "Type: plist integer, 64-bit\nFailsafe: 0\nDescription: Sets InitialTSC in gEfiProcessorSubClassGuid. Sets initial TSC value, normally 0.";

/* Class = "NSButton"; ibShadowedToolTip = "Add or remove this section from plist\nFailsafe: Add"; ObjectID = "38m-qA-it7"; */
"38m-qA-it7.ibShadowedToolTip" = "Add or remove this section from plist\nFailsafe: Add";

/* Class = "NSButtonCell"; title = "Generate"; ObjectID = "4bx-F9-aab"; */
"4bx-F9-aab.title" = "Generate";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: 0 (OEM specified on Apple hardware, 0 otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE128 - FirmwareFeatures and ExtendedFirmwareFeatures Description: 64-bit firmware features bitmask. Refer to AppleFeatures.h for more details. Lower 32 bits match FirmwareFeatures. Upper 64 bits match ExtendedFirmwareFeatures."; ObjectID = "4l3-Do-kcw"; */
"4l3-Do-kcw.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: 0 (OEM specified on Apple hardware, 0 otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE128 - FirmwareFeatures and ExtendedFirmwareFeatures Description: 64-bit firmware features bitmask. Refer to AppleFeatures.h for more details. Lower 32 bits match FirmwareFeatures. Upper 64 bits match ExtendedFirmwareFeatures.";

/* Class = "NSTableColumn"; headerCell.title = "Speed"; ObjectID = "4m4-WW-5Mc"; */
"4m4-WW-5Mc.headerCell.title" = "Speed";

/* Class = "NSTextFieldCell"; title = "PlatformNVRAM"; ObjectID = "5bx-Mf-EOd"; */
"5bx-Mf-EOd.title" = "PlatformNVRAM";

/* Class = "NSTextFieldCell"; title = "Serial Number"; ObjectID = "67d-7j-Elg"; */
"67d-7j-Elg.title" = "Serial Number";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: This variable comes in pair with FirmwareFeatures. Specifies the values of NVRAM variables:\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:FirmwareFeaturesMask\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ExtendedFirmwareFeaturesMask"; ObjectID = "6Kd-rJ-POa"; */
"6Kd-rJ-POa.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: This variable comes in pair with FirmwareFeatures. Specifies the values of NVRAM variables:\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:FirmwareFeaturesMask\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ExtendedFirmwareFeaturesMask";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — BIOS Release Date\nDescription: Firmware release date. Similar to BIOSVersion. May look like 12/08/2017."; ObjectID = "6gn-IY-sd7"; */
"6gn-IY-sd7.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — BIOS Release Date\nDescription: Firmware release date. Similar to BIOSVersion. May look like 12/08/2017.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 16-bit\nFailsafe: 0xFFFF (unknown)\nSMBIOS: Memory Device (Type 17) — Total Width\nDescription: Specifies the total width, in bits, of the memory, including any check or error-correction bits. If there are no error-correction bits, this value should be equal to DataWidth."; ObjectID = "73U-MV-8lJ"; */
"73U-MV-8lJ.ibShadowedToolTip" = "Type: plist integer, 16-bit\nFailsafe: 0xFFFF (unknown)\nSMBIOS: Memory Device (Type 17) — Total Width\nDescription: Specifies the total width, in bits, of the memory, including any check or error-correction bits. If there are no error-correction bits, this value should be equal to DataWidth.";

/* Class = "NSTextFieldCell"; title = "Startup Power Events"; ObjectID = "7XG-zt-wiU"; */
"7XG-zt-wiU.title" = "Startup Power Events";

/* Class = "NSTextFieldCell"; title = "SKU Number"; ObjectID = "7ZS-hv-cMX"; */
"7ZS-hv-cMX.title" = "SKU Number";

/* Class = "NSTextFieldCell"; title = "Version"; ObjectID = "7eK-xY-ftU"; */
"7eK-xY-ftU.title" = "Version";

/* Class = "NSTextFieldCell"; title = "Version"; ObjectID = "7qD-we-NcT"; */
"7qD-we-NcT.title" = "Version";

/* Class = "NSButtonCell"; title = "UpdateNVRAM"; ObjectID = "8Bn-0E-TZu"; */
"8Bn-0E-TZu.title" = "UpdateNVRAM";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemProductName."; ObjectID = "8g1-Si-2Vs"; */
"8g1-Si-2Vs.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemProductName.";

/* Class = "NSTextFieldCell"; title = "DataHub"; ObjectID = "8wz-5k-5Zd"; */
"8wz-5k-5Zd.title" = "DataHub";

/* Class = "NSButtonCell"; title = "Generate"; ObjectID = "9UV-S4-eO3"; */
"9UV-S4-eO3.title" = "Generate";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Type: plist string\nFailsafe: Auto\nDescription: Update SMBIOS fields approach:\n\n• TryOverwrite — Overwrite if new size is <= than the page-aligned original and there are no issues with legacy region unlock. Create otherwise. Has issues on some types of firmware.\n• Create — Replace the tables with newly allocated EfiReservedMemoryType at AllocateMaxAddress without any fallbacks.\n• Overwrite — Overwrite existing gEfiSmbiosTableGuid and gEfiSmbiosTable3Guid data if it fits new size. Abort with unspecified state otherwise.\n• Custom — WriteSMBIOStables(gEfiSmbios(3)TableGuid)togOcCustomSmbios(3)TableGuidtoworkaround firmware overwriting SMBIOS contents at ExitBootServices. Otherwise equivalent to Create. Requires patch-ing AppleSmbios.kext and AppleACPIPlatform.kext to read from another GUID: \"EB9D2D31\" - \"EB9D2D35\" (in ASCII), done automatically by CustomSMBIOSGuid quirk.\n\nNote: A side effect of using the Custom approach that it makes SMBIOS updates exclusive to macOS, avoiding a collision with existing Windows activation and custom OEM software but potentially obstructing the operation of Apple-specific tools."; ObjectID = "9o2-8y-dq6"; */
"9o2-8y-dq6.ibShadowedToolTip" = "Type: plist string\nFailsafe: Auto\nDescription: Update SMBIOS fields approach:\n\n• TryOverwrite — Overwrite if new size is <= than the page-aligned original and there are no issues with legacy region unlock. Create otherwise. Has issues on some types of firmware.\n• Create — Replace the tables with newly allocated EfiReservedMemoryType at AllocateMaxAddress without any fallbacks.\n• Overwrite — Overwrite existing gEfiSmbiosTableGuid and gEfiSmbiosTable3Guid data if it fits new size. Abort with unspecified state otherwise.\n• Custom — WriteSMBIOStables(gEfiSmbios(3)TableGuid)togOcCustomSmbios(3)TableGuidtoworkaround firmware overwriting SMBIOS contents at ExitBootServices. Otherwise equivalent to Create. Requires patch-ing AppleSmbios.kext and AppleACPIPlatform.kext to read from another GUID: \"EB9D2D31\" - \"EB9D2D35\" (in ASCII), done automatically by CustomSMBIOSGuid quirk.\n\nNote: A side effect of using the Custom approach that it makes SMBIOS updates exclusive to macOS, avoiding a collision with existing Windows activation and custom OEM software but potentially obstructing the operation of Apple-specific tools.";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean \nFailsafe: false \nDescription: Forces Windows support in FirmwareFeatures. \nAdded bits to FirmwareFeatures:\n• FW_FEATURE_SUPPORTS_CSM_LEGACY_MODE (0x1) - Without this bit, it is not possible to reboot to Windows installed on a drive with an EFI partition that is not the first partition on the disk.\n• FW_FEATURE_SUPPORTS_UEFI_WINDOWS_BOOT (0x20000000) - Without this bit it is not possible to reboot to Windows installed on a drive with an EFI partition that is the first partition on the disk."; ObjectID = "9sY-PL-wkx"; */
"9sY-PL-wkx.ibShadowedToolTip" = "Type: plist boolean \nFailsafe: false \nDescription: Forces Windows support in FirmwareFeatures. \nAdded bits to FirmwareFeatures:\n• FW_FEATURE_SUPPORTS_CSM_LEGACY_MODE (0x1) - Without this bit, it is not possible to reboot to Windows installed on a drive with an EFI partition that is not the first partition on the disk.\n• FW_FEATURE_SUPPORTS_UEFI_WINDOWS_BOOT (0x20000000) - Without this bit it is not possible to reboot to Windows installed on a drive with an EFI partition that is the first partition on the disk.";

/* Class = "NSTextFieldCell"; title = "UUID"; ObjectID = "ADr-qW-Bb4"; */
"ADr-qW-Bb4.title" = "UUID";

/* Class = "NSTextFieldCell"; title = "BIOS"; ObjectID = "AuX-4b-jtu"; */
"AuX-4b-jtu.title" = "BIOS";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets name in gEfiMiscSubClassGuid. The value found on Macs is platform in ASCII."; ObjectID = "BJm-4X-red"; */
"BJm-4X-red.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets name in gEfiMiscSubClassGuid. The value found on Macs is platform in ASCII.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_SSN and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:SSN."; ObjectID = "Bwi-9B-eFc"; */
"Bwi-9B-eFc.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_SSN and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:SSN.";

/* Class = "NSTextFieldCell"; title = "Board"; ObjectID = "CDl-Mt-vej"; */
"CDl-Mt-vej.title" = "Board";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 64-bit\nFailsafe: 0\nDescription: Sets StartupPowerEvents in gEfiMiscSubClassGuid. The value found on Macs is power management state bitmask, normally 0. Known bits read by X86PlatformPlugin.kext:\n• 0x00000001 — Shutdown cause was a PWROK event (Same as GEN_PMCON_2 bit 0)\n• 0x00000002 — Shutdown cause was a SYS_PWROK event (Same as GEN_PMCON_2 bit 1)\n• 0x00000004 — Shutdown cause was a THRMTRIP# event (Same as GEN_PMCON_2 bit 3)\n• 0x00000008 — Rebooted due to a SYS_RESET# event (Same as GEN_PMCON_2 bit 4)\n• 0x00000010 — Power Failure (Same as GEN_PMCON_3 bit 1 PWR_FLR)\n• 0x00000020 — Loss of RTC Well Power (Same as GEN_PMCON_3 bit 2 RTC_PWR_STS)\n• 0x00000040 — General Reset Status (Same as GEN_PMCON_3 bit 9 GEN_RST_STS)\n• 0xffffff80 — SUS Well Power Loss (Same as GEN_PMCON_3 bit 14)\n• 0x00010000 — Wake cause was a ME Wake event (Same as PRSTS bit 0, ME_WAKE_STS)\n• 0x00020000 — Cold Reboot was ME Induced event (Same as PRSTS bit 1 \n• 0x00040000 — Warm Reboot was ME Induced event (Same as PRSTS bit 2 \n• 0x00080000 — Shutdown was ME Induced event (Same as PRSTS bit 3 ME_HOST_PWRDN)\n• 0x00100000 — Global reset ME Watchdog Timer event (Same as PRSTS bit 6)\n• 0x00200000 — Global reset PowerManagement Watchdog Timer event (Same as PRSTS bit 15)"; ObjectID = "CdO-kb-3WH"; */
"CdO-kb-3WH.ibShadowedToolTip" = "Type: plist integer, 64-bit\nFailsafe: 0\nDescription: Sets StartupPowerEvents in gEfiMiscSubClassGuid. The value found on Macs is power management state bitmask, normally 0. Known bits read by X86PlatformPlugin.kext:\n• 0x00000001 — Shutdown cause was a PWROK event (Same as GEN_PMCON_2 bit 0)\n• 0x00000002 — Shutdown cause was a SYS_PWROK event (Same as GEN_PMCON_2 bit 1)\n• 0x00000004 — Shutdown cause was a THRMTRIP# event (Same as GEN_PMCON_2 bit 3)\n• 0x00000008 — Rebooted due to a SYS_RESET# event (Same as GEN_PMCON_2 bit 4)\n• 0x00000010 — Power Failure (Same as GEN_PMCON_3 bit 1 PWR_FLR)\n• 0x00000020 — Loss of RTC Well Power (Same as GEN_PMCON_3 bit 2 RTC_PWR_STS)\n• 0x00000040 — General Reset Status (Same as GEN_PMCON_3 bit 9 GEN_RST_STS)\n• 0xffffff80 — SUS Well Power Loss (Same as GEN_PMCON_3 bit 14)\n• 0x00010000 — Wake cause was a ME Wake event (Same as PRSTS bit 0, ME_WAKE_STS)\n• 0x00020000 — Cold Reboot was ME Induced event (Same as PRSTS bit 1 \n• 0x00040000 — Warm Reboot was ME Induced event (Same as PRSTS bit 2 \n• 0x00080000 — Shutdown was ME Induced event (Same as PRSTS bit 3 ME_HOST_PWRDN)\n• 0x00100000 — Global reset ME Watchdog Timer event (Same as PRSTS bit 6)\n• 0x00200000 — Global reset PowerManagement Watchdog Timer event (Same as PRSTS bit 15)";

/* Class = "NSButtonCell"; title = "Unselect All"; ObjectID = "CtR-KN-0F7"; */
"CtR-KN-0F7.title" = "Unselect All";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Asset Tag Number Description: Chassis type name. Varies, could be empty or MacBook-Aluminum."; ObjectID = "D26-kV-2wQ"; */
"D26-kV-2wQ.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Asset Tag Number Description: Chassis type name. Varies, could be empty or MacBook-Aluminum.";

/* Class = "NSTextFieldCell"; title = "Asset Tag"; ObjectID = "FGe-q0-v48"; */
"FGe-q0-v48.title" = "Asset Tag";

/* Class = "NSTableColumn"; headerCell.title = "SerialNumber"; ObjectID = "FHK-PM-4JZ"; */
"FHK-PM-4JZ.headerCell.title" = "SerialNumber";

/* Class = "NSButtonCell"; title = "UpdateDataHub"; ObjectID = "FvU-m3-lup"; */
"FvU-m3-lup.title" = "UpdateDataHub";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Asset Tag\nDescription: Asset tag number. Varies, may be empty or Type2 - Board Asset Tag."; ObjectID = "GJj-A4-bd9"; */
"GJj-A4-bd9.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Asset Tag\nDescription: Asset tag number. Varies, may be empty or Type2 - Board Asset Tag.";

/* Class = "NSTableView"; ibShadowedToolTip = "1. AssetTag\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Asset Tag\nDescription: Specifies the asset tag of this memory device.\n2. BankLocator\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Bank Locator\nDescription: Specifies the physically labeled bank where the memory device is located.\n3. DeviceLocator\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Device Locator\nDescription: Specifies the physically-labeled socket or board position where the memory device is located.\n4. Manufacturer\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Manufacturer\nDescription: Specifies the manufacturer of this memory device.\n5. PartNumber\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Part Number\nDescription: Specifies the part number of this memory device.\n6. SerialNumber\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Serial Number\nDescription: Specifies the serial number of this memory device.\n7. Size\nType: plist integer, 32-bit\nFailsafe: 0\nSMBIOS: Memory Device (Type 17) — Size\nDescription: Specifies the size of the memory device, in megabytes. 0 indicates this slot is not populated.\n8. Speed\nType: plist integer, 16-bit\nFailsafe: 0\nSMBIOS: Memory Device (Type 17) — Speed\nDescription: Specifies the maximum capable speed of the device, in megatransfers per second (MT/s). 0 indicates an unknown speed."; ObjectID = "GR6-98-yvG"; */
"GR6-98-yvG.ibShadowedToolTip" = "1. AssetTag\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Asset Tag\nDescription: Specifies the asset tag of this memory device.\n2. BankLocator\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Bank Locator\nDescription: Specifies the physically labeled bank where the memory device is located.\n3. DeviceLocator\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Device Locator\nDescription: Specifies the physically-labeled socket or board position where the memory device is located.\n4. Manufacturer\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Manufacturer\nDescription: Specifies the manufacturer of this memory device.\n5. PartNumber\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Part Number\nDescription: Specifies the part number of this memory device.\n6. SerialNumber\nType: plist string\nFailsafe: Unknown\nSMBIOS: Memory Device (Type 17) — Serial Number\nDescription: Specifies the serial number of this memory device.\n7. Size\nType: plist integer, 32-bit\nFailsafe: 0\nSMBIOS: Memory Device (Type 17) — Size\nDescription: Specifies the size of the memory device, in megabytes. 0 indicates this slot is not populated.\n8. Speed\nType: plist integer, 16-bit\nFailsafe: 0\nSMBIOS: Memory Device (Type 17) — Speed\nDescription: Specifies the maximum capable speed of the device, in megatransfers per second (MT/s). 0 indicates an unknown speed.";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Use custom memory configuration defined in the Memory section. This completely replaces any existing memory configuration in SMBIOS, and is only active when UpdateSMBIOS is set to true."; ObjectID = "GZV-Yr-hPJ"; */
"GZV-Yr-hPJ.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Use custom memory configuration defined in the Memory section. This completely replaces any existing memory configuration in SMBIOS, and is only active when UpdateSMBIOS is set to true.";

/* Class = "NSTextFieldCell"; title = "Product Name"; ObjectID = "GbE-LE-4eK"; */
"GbE-LE-4eK.title" = "Product Name";

/* Class = "NSButtonCell"; title = " Registered (buffered)"; ObjectID = "GfA-Fq-uLx"; */
"GfA-Fq-uLx.title" = " Registered (buffered)";

/* Class = "NSTextFieldCell"; title = "Board Revision"; ObjectID = "GiG-2a-PMR"; */
"GiG-2a-PMR.title" = "Board Revision";

/* Class = "NSTextFieldCell"; title = "Platform Name"; ObjectID = "Gud-fK-xY5"; */
"Gud-fK-xY5.title" = "Platform Name";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Version\nDescription: Product iteration version number. May look like 1.1"; ObjectID = "Hjz-kh-KPV"; */
"Hjz-kh-KPV.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Version\nDescription: Product iteration version number. May look like 1.1";

/* Class = "NSTextFieldCell"; title = "ErrorCorrection"; ObjectID = "IFz-U9-319"; */
"IFz-U9-319.title" = "ErrorCorrection";

/* Class = "NSTableColumn"; headerCell.title = "DeviceLocator"; ObjectID = "IGv-sT-Ard"; */
"IGv-sT-Ard.headerCell.title" = "DeviceLocator";

/* Class = "NSButton"; ibShadowedToolTip = "Add or remove this section from plist\nFailsafe: Add"; ObjectID = "IJO-Va-YDO"; */
"IJO-Va-YDO.ibShadowedToolTip" = "Add or remove this section from plist\nFailsafe: Add";

/* Class = "NSButtonCell"; title = "Select All"; ObjectID = "IlY-dq-QQD"; */
"IlY-dq-QQD.title" = "Select All";

/* Class = "NSButtonCell"; title = "Add this section in config.plist"; ObjectID = "IqG-Mw-D8N"; */
"IqG-Mw-D8N.title" = "Add this section in config.plist";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — SKU Number\nDescription: Mac Board ID (board-id). May look like Mac-7BA5B2D9E42DDD94 or Mac-F221BEC8 in older models. Sometimes it can be just empty."; ObjectID = "J9G-p3-A50"; */
"J9G-p3-A50.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — SKU Number\nDescription: Mac Board ID (board-id). May look like Mac-7BA5B2D9E42DDD94 or Mac-F221BEC8 in older models. Sometimes it can be just empty.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets RPlt in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC RPlt key."; ObjectID = "JBr-Jy-s8V"; */
"JBr-Jy-s8V.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets RPlt in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC RPlt key.";

/* Class = "NSTextFieldCell"; title = "System UUID"; ObjectID = "JCc-EO-5xz"; */
"JCc-EO-5xz.title" = "System UUID";

/* Class = "NSButtonCell"; title = "Add this section in config.plist"; ObjectID = "JEO-9d-aFI"; */
"JEO-9d-aFI.title" = "Add this section in config.plist";

/* Class = "NSButtonCell"; title = "UseRawUuidEncoding"; ObjectID = "JEw-8f-crY"; */
"JEw-8f-crY.title" = "UseRawUuidEncoding";

/* Class = "NSButtonCell"; title = "AdviseWindows"; ObjectID = "Jk7-vn-L68"; */
"Jk7-vn-L68.title" = "AdviseWindows";

/* Class = "NSTextFieldCell"; title = "System Serial Number"; ObjectID = "K3Y-PC-Vyv"; */
"K3Y-PC-Vyv.title" = "System Serial Number";

/* Class = "NSButtonCell"; title = "Generate"; ObjectID = "KNP-Ab-25u"; */
"KNP-Ab-25u.title" = "Generate";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_MLB and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB"; ObjectID = "L5e-wR-9li"; */
"L5e-wR-9li.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_MLB and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: This variable comes in pair with FirmwareFeaturesMask. Specifies the values of NVRAM variables:\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:FirmwareFeatures\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ExtendedFirmwareFeatures"; ObjectID = "L5k-Nq-H9Z"; */
"L5k-Nq-H9Z.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: This variable comes in pair with FirmwareFeaturesMask. Specifies the values of NVRAM variables:\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:FirmwareFeatures\n• 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ExtendedFirmwareFeatures";

/* Class = "NSTextFieldCell"; title = "Device Paths Supported"; ObjectID = "LHd-Wt-aT8"; */
"LHd-Wt-aT8.title" = "Device Paths Supported";

/* Class = "NSTextFieldCell"; title = "Release Date"; ObjectID = "Lof-UF-S84"; */
"Lof-UF-S84.title" = "Release Date";

/* Class = "NSButtonCell"; title = "Generate"; ObjectID = "MRn-KI-kxS"; */
"MRn-KI-kxS.title" = "Generate";

/* Class = "NSTextFieldCell"; title = "Serial Number"; ObjectID = "MW7-wk-hds"; */
"MW7-wk-hds.title" = "Serial Number";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the value of NVRAM variable 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_BID."; ObjectID = "MpC-g9-pKJ"; */
"MpC-g9-pKJ.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the value of NVRAM variable 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_BID.";

/* Class = "NSBox"; title = "Box"; ObjectID = "N0I-Qi-97B"; */
"N0I-Qi-97B.title" = "Box";

/* Class = "NSTextFieldCell"; title = "Location In Chassis"; ObjectID = "NKp-1W-cwW"; */
"NKp-1W-cwW.title" = "Location In Chassis";

/* Class = "NSTextFieldCell"; title = "System UUID"; ObjectID = "Nh2-fC-Gmv"; */
"Nh2-fC-Gmv.title" = "System UUID";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the value of NVRAM variable 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:system-id for boot services only. The value found on Macs is equal to SMBIOS SystemUUID."; ObjectID = "Nq6-s5-69T"; */
"Nq6-s5-69T.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Specifies the value of NVRAM variable 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:system-id for boot services only. The value found on Macs is equal to SMBIOS SystemUUID.";

/* Class = "NSTextFieldCell"; title = "Features"; ObjectID = "Ntb-g0-8oU"; */
"Ntb-g0-8oU.title" = "Features";

/* Class = "NSTextFieldCell"; title = "FormFactor"; ObjectID = "OTt-Ne-MaI"; */
"OTt-Ne-MaI.title" = "FormFactor";

/* Class = "NSButtonCell"; title = "Other"; ObjectID = "Oe7-gh-kqX"; */
"Oe7-gh-kqX.title" = "Other";

/* Class = "NSTextFieldCell"; title = "Manufacturer"; ObjectID = "Oqy-j7-kv6"; */
"Oqy-j7-kv6.title" = "Manufacturer";

/* Class = "NSButton"; ibShadowedToolTip = "Add or remove this section from plist\nFailsafe: Add"; ObjectID = "PHO-4O-OIP"; */
"PHO-4O-OIP.ibShadowedToolTip" = "Add or remove this section from plist\nFailsafe: Add";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Type: plist string\nFailsafe: Auto\nDescription: Indicates whether system memory is upgradable in PlatformFeature. This controls the visibility of the Memory tab in 'About This Mac'.\n\nValid values:\n• Auto — use the original PlatformFeature value.\n• Upgradable — explicitly unset PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY (0x2) in PlatformFeature.\n• Soldered — explicitly set PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY (0x2) in PlatformFeature.\n\nNote: On certain Mac models, such as the MacBookPro10,x and any MacBookAir, SPMemoryReporter.spreporter will ignore PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY and assume that system memory is non-upgradable."; ObjectID = "PPQ-0x-9Ub"; */
"PPQ-0x-9Ub.ibShadowedToolTip" = "Type: plist string\nFailsafe: Auto\nDescription: Indicates whether system memory is upgradable in PlatformFeature. This controls the visibility of the Memory tab in 'About This Mac'.\n\nValid values:\n• Auto — use the original PlatformFeature value.\n• Upgradable — explicitly unset PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY (0x2) in PlatformFeature.\n• Soldered — explicitly set PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY (0x2) in PlatformFeature.\n\nNote: On certain Mac models, such as the MacBookPro10,x and any MacBookAir, SPMemoryReporter.spreporter will ignore PT_FEATURE_HAS_SOLDERED_SYSTEM_MEMORY and assume that system memory is non-upgradable.";

/* Class = "NSSegmentedCell"; PVt-qS-yBp.ibShadowedLabels[0] = "Model Lookup"; ObjectID = "PVt-qS-yBp"; */
"PVt-qS-yBp.ibShadowedLabels[0]" = "Model Lookup";

/* Class = "NSSegmentedCell"; PVt-qS-yBp.ibShadowedLabels[1] = "Check Coverage"; ObjectID = "PVt-qS-yBp"; */
"PVt-qS-yBp.ibShadowedLabels[1]" = "Check Coverage";

/* Class = "NSTextFieldCell"; title = "System Product Name"; ObjectID = "Pwo-2A-1gv"; */
"Pwo-2A-1gv.title" = "System Product Name";

/* Class = "NSTextFieldCell"; title = "Version"; ObjectID = "Q7C-PE-T4u"; */
"Q7C-PE-T4u.title" = "Version";

/* Class = "NSTextFieldCell"; title = "Vendor"; ObjectID = "R7K-qk-Tpk"; */
"R7K-qk-Tpk.title" = "Vendor";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 16-bit\nFailsafe: 0 (Automatic)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE131 - ProcessorType Description: Combined of Processor Major and Minor types.\n\nAutomatic value generation attempts to provide the most accurate value for the currently installed CPU. When this fails, please raise an issue and provide sysctl machdep.cpu and dmidecode output. For a full list of available values and their limitations (the value will only apply if the CPU core count matches), refer to the Apple SMBIOS definitions header."; ObjectID = "RLW-Hz-QKb"; */
"RLW-Hz-QKb.ibShadowedToolTip" = "Type: plist integer, 16-bit\nFailsafe: 0 (Automatic)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE131 - ProcessorType Description: Combined of Processor Major and Minor types.\n\nAutomatic value generation attempts to provide the most accurate value for the currently installed CPU. When this fails, please raise an issue and provide sysctl machdep.cpu and dmidecode output. For a full list of available values and their limitations (the value will only apply if the CPU core count matches), refer to the Apple SMBIOS definitions header.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Family Description: Family name. May look like iMac Pro."; ObjectID = "Rag-wy-fpE"; */
"Rag-wy-fpE.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Family Description: Family name. May look like iMac Pro.";

/* Class = "NSTextFieldCell"; title = "Generic"; ObjectID = "Rcs-Ds-NTm"; */
"Rcs-Ds-NTm.title" = "Generic";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Generate PlatformInfo based on the Generic section instead of using values from DataHub, NVRAM, and SMBIOS sections.\nEnabling this option is useful when Generic section is flexible enough:\n• When enabled SMBIOS, DataHub, and PlatformNVRAM data is unused.\n• When disabled Generic section is unused.\n\nWarning: Setting this option to false is strongly discouraged when intending to update platform information. A false setting is typically only valid for minor corrections to SMBIOS values on legacy Apple hardware. In all other cases, setting Automatic to false may lead to hard-to-debug errors resulting from inconsistent or invalid settings."; ObjectID = "RfW-jb-UfW"; */
"RfW-jb-UfW.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Generate PlatformInfo based on the Generic section instead of using values from DataHub, NVRAM, and SMBIOS sections.\nEnabling this option is useful when Generic section is flexible enough:\n• When enabled SMBIOS, DataHub, and PlatformNVRAM data is unused.\n• When disabled Generic section is unused.\n\nWarning: Setting this option to false is strongly discouraged when intending to update platform information. A false setting is typically only valid for minor corrections to SMBIOS values on legacy Apple hardware. In all other cases, setting Automatic to false may lead to hard-to-debug errors resulting from inconsistent or invalid settings.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — Vendor\nDescription: BIOS Vendor. All rules of SystemManufacturer do apply."; ObjectID = "SO7-47-4Z3"; */
"SO7-47-4Z3.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — Vendor\nDescription: BIOS Vendor. All rules of SystemManufacturer do apply.";

/* Class = "NSTextFieldCell"; title = "Platform Feature"; ObjectID = "SVD-ga-fZP"; */
"SVD-ga-fZP.title" = "Platform Feature";

/* Class = "NSTextFieldCell"; title = "Firmware Features Mask"; ObjectID = "T2c-VK-Zji"; */
"T2c-VK-Zji.title" = "Firmware Features Mask";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist multidata, 6 bytes\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM.\n\nSpecify special string value OEM to extract current value from NVRAM (ROM variable) and use it throughout the sections. This feature can only be used on Mac-compatible firmware."; ObjectID = "TTj-aB-3ch"; */
"TTj-aB-3ch.ibShadowedToolTip" = "Type: plist multidata, 6 bytes\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM.\n\nSpecify special string value OEM to extract current value from NVRAM (ROM variable) and use it throughout the sections. This feature can only be used on Mac-compatible firmware.";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Update SMBIOS fields. These fields are read from the Generic or SMBIOS sections depending on the setting of the Automatic property."; ObjectID = "U5f-5A-ryt"; */
"U5f-5A-ryt.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Update SMBIOS fields. These fields are read from the Generic or SMBIOS sections depending on the setting of the Automatic property.";

/* Class = "NSButton"; ibShadowedToolTip = "Add or remove this section from plist\nFailsafe: Add"; ObjectID = "U5s-uE-f0J"; */
"U5s-uE-f0J.ibShadowedToolTip" = "Add or remove this section from plist\nFailsafe: Add";

/* Class = "NSTabViewItem"; label = "SMBIOS"; ObjectID = "ULX-O6-vek"; */
"ULX-O6-vek.label" = "SMBIOS";

/* Class = "NSButtonCell"; title = "from SMBIOS"; ObjectID = "UNS-re-qUK"; */
"UNS-re-qUK.title" = "from SMBIOS";

/* Class = "NSBox"; title = "Devices"; ObjectID = "Uex-z6-JSb"; */
"Uex-z6-JSb.title" = "Devices";

/* Class = "NSButtonCell"; title = "UpdateSMBIOS"; ObjectID = "Uzb-U1-Thj"; */
"Uzb-U1-Thj.title" = "UpdateSMBIOS";

/* Class = "NSTextFieldCell"; title = "MaxCapacity"; ObjectID = "VA0-6A-XlY"; */
"VA0-6A-XlY.title" = "MaxCapacity";

/* Class = "NSButtonCell"; title = "from System"; ObjectID = "VKd-ep-fuP"; */
"VKd-ep-fuP.title" = "from System";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 64-bit\nFailsafe: 0 (Automatic)\nDescription: Sets FSBFrequency in gEfiProcessorSubClassGuid. Sets CPU FSB frequency.\n\nSets CPU FSB frequency. This value equals to CPU nominal frequency divided by CPU maximum bus ratio and is specified in Hz. Refer to MSR_NEHALEM_PLATFORM_INFO (CEh) MSR value to determine maximum bus ratio on modern Intel CPUs.\n\nNote: This value is not used on Skylake and newer but is still provided to follow suit."; ObjectID = "W2E-oe-9Uq"; */
"W2E-oe-9Uq.ibShadowedToolTip" = "Type: plist integer, 64-bit\nFailsafe: 0 (Automatic)\nDescription: Sets FSBFrequency in gEfiProcessorSubClassGuid. Sets CPU FSB frequency.\n\nSets CPU FSB frequency. This value equals to CPU nominal frequency divided by CPU maximum bus ratio and is specified in Hz. Refer to MSR_NEHALEM_PLATFORM_INFO (CEh) MSR value to determine maximum bus ratio on modern Intel CPUs.\n\nNote: This value is not used on Skylake and newer but is still provided to follow suit.";

/* Class = "NSTextFieldCell"; title = "Board Product"; ObjectID = "WDt-qb-GcR"; */
"WDt-qb-GcR.title" = "Board Product";

/* Class = "NSTextFieldCell"; title = "ARTFrequency"; ObjectID = "WEo-Ob-3Vp"; */
"WEo-Ob-3Vp.title" = "ARTFrequency";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 6 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets REV in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC REV key."; ObjectID = "X7k-fY-cFM"; */
"X7k-fY-cFM.ibShadowedToolTip" = "Type: plist data, 6 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets REV in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC REV key.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Product\nDescription: Mac Board ID (board-id). May look like Mac-7BA5B2D9E42DDD94 or Mac-F221BEC8 in older models."; ObjectID = "X9U-bM-MRj"; */
"X9U-bM-MRj.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Product\nDescription: Mac Board ID (board-id). May look like Mac-7BA5B2D9E42DDD94 or Mac-F221BEC8 in older models.";

/* Class = "NSTextFieldCell"; title = "MLB"; ObjectID = "XDd-C5-ehh"; */
"XDd-C5-ehh.title" = "MLB";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Update Data Hub fields. These fields are read from the Generic or DataHub sections depending on the setting of the Automatic property.\n\nNote: The implementation of the Data Hub protocol in EFI firmware on virtually all systems, including Apple hardware, means that existing Data Hub entries cannot be overridden. New entries are added to the end of the Data Hub instead, with macOS ignoring old entries. This can be worked around by replacing the Data Hub protocol using the ProtocolOverrides section. Refer to the DataHub protocol override description for details."; ObjectID = "XRB-18-dHU"; */
"XRB-18-dHU.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Update Data Hub fields. These fields are read from the Generic or DataHub sections depending on the setting of the Automatic property.\n\nNote: The implementation of the Data Hub protocol in EFI firmware on virtually all systems, including Apple hardware, means that existing Data Hub entries cannot be overridden. New entries are added to the end of the Data Hub instead, with macOS ignoring old entries. This can be worked around by replacing the Data Hub protocol using the ProtocolOverrides section. Refer to the DataHub protocol override description for details.";

/* Class = "NSTextFieldCell"; title = "SystemMemoryStatus"; ObjectID = "Xed-CT-3f5"; */
"Xed-CT-3f5.title" = "SystemMemoryStatus";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 64-bit\nFailsafe: 0\nSMBIOS: Physical Memory Array (Type 16) — Maximum Capacity\nDescription: Specifies the maximum amount of memory, in bytes, supported by the system."; ObjectID = "Y4W-6h-1G9"; */
"Y4W-6h-1G9.ibShadowedToolTip" = "Type: plist integer, 64-bit\nFailsafe: 0\nSMBIOS: Physical Memory Array (Type 16) — Maximum Capacity\nDescription: Specifies the maximum amount of memory, in bytes, supported by the system.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 16-bit\nFailsafe: 0 (Automatic)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE131 - ProcessorType Description: Combined of Processor Major and Minor types."; ObjectID = "YN8-NU-Zgm"; */
"YN8-NU-Zgm.ibShadowedToolTip" = "Type: plist integer, 16-bit\nFailsafe: 0 (Automatic)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE131 - ProcessorType Description: Combined of Processor Major and Minor types.";

/* Class = "NSTableColumn"; headerCell.title = "Size"; ObjectID = "YeX-yd-sEF"; */
"YeX-yd-sEF.headerCell.title" = "Size";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer\nFailsafe: OEM specified\nSMBIOS: Baseboard (or Module) Information (Type 2) — Board Type\nDescription: Either 0xA (Motherboard (includes processor, memory, and I/O) or 0xB (Processor/Memory Module), refer to Table 15 – Baseboard: Board Type for more details."; ObjectID = "YgB-Sp-EZ5"; */
"YgB-Sp-EZ5.ibShadowedToolTip" = "Type: plist integer\nFailsafe: OEM specified\nSMBIOS: Baseboard (or Module) Information (Type 2) — Board Type\nDescription: Either 0xA (Motherboard (includes processor, memory, and I/O) or 0xB (Processor/Memory Module), refer to Table 15 – Baseboard: Board Type for more details.";

/* Class = "NSButtonCell"; title = "Automatic"; ObjectID = "Yle-7s-0Gt"; */
"Yle-7s-0Gt.title" = "Automatic";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Manufacturer Description: Board manufacturer. All rules of SystemManufacturer do apply."; ObjectID = "YnG-4B-0S3"; */
"YnG-4B-0S3.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Manufacturer Description: Board manufacturer. All rules of SystemManufacturer do apply.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 32-bit\nFailsafe: 0xFFFFFFFF  (OEM specified on Apple hardware, do not provide the table otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE133 - PlatformFeature\nDescription: Platform features bitmask. Missing on older Macs."; ObjectID = "Yog-wn-LaZ"; */
"Yog-wn-LaZ.ibShadowedToolTip" = "Type: plist integer, 32-bit\nFailsafe: 0xFFFFFFFF  (OEM specified on Apple hardware, do not provide the table otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE133 - PlatformFeature\nDescription: Platform features bitmask. Missing on older Macs.";

/* Class = "NSButtonCell"; title = "Your SMBIOS needs to be updated"; ObjectID = "YyS-LF-pEM"; */
"YyS-LF-pEM.title" = "Your SMBIOS needs to be updated";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Sets SMBIOS vendor fields to Acidanthera.\n\nIt can be dangerous to use 'Apple' in SMBIOS vendor fields for reasons outlined in the SystemManufacturer description. However, certain firmware may not provide valid values otherwise, which could obstruct the operation of some software."; ObjectID = "Z8Z-8r-mnL"; */
"Z8Z-8r-mnL.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Sets SMBIOS vendor fields to Acidanthera.\n\nIt can be dangerous to use 'Apple' in SMBIOS vendor fields for reasons outlined in the SystemManufacturer description. However, certain firmware may not provide valid values otherwise, which could obstruct the operation of some software.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Serial Number\nDescription: Product serial number in defined format. Known formats are described in macserial."; ObjectID = "a03-aA-XtL"; */
"a03-aA-XtL.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Serial Number\nDescription: Product serial number in defined format. Known formats are described in macserial.";

/* Class = "NSTextFieldCell"; title = "Features Mask"; ObjectID = "aAi-r5-EIk"; */
"aAi-r5-EIk.title" = "Features Mask";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Location in Chassis Description: Varies, may be empty or Part Component."; ObjectID = "aXB-A5-lJa"; */
"aXB-A5-lJa.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Location in Chassis Description: Varies, may be empty or Part Component.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets SystemSerialNumber in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemSerialNumber in Unicode."; ObjectID = "agr-Am-FjN"; */
"agr-Am-FjN.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets SystemSerialNumber in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemSerialNumber in Unicode.";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Sets BIOSVersion to 9999.999.999.999.999, recommended for legacy Macs when using Automatic PlatformInfo, to avoid BIOS updates in unofficially supported macOS versions."; ObjectID = "bKX-Jd-g28"; */
"bKX-Jd-g28.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Sets BIOSVersion to 9999.999.999.999.999, recommended for legacy Macs when using Automatic PlatformInfo, to avoid BIOS updates in unofficially supported macOS versions.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets RBr in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC RBr key."; ObjectID = "bTa-i4-4eq"; */
"bTa-i4-4eq.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: Empty (Not installed)\nDescription: Sets RBr in gEfiMiscSubClassGuid. Custom property read by VirtualSMC or FakeSMC to generate SMC RBr key.";

/* Class = "NSTextFieldCell"; title = "System UUID"; ObjectID = "baC-2d-vGR"; */
"baC-2d-vGR.title" = "System UUID";

/* Class = "NSTextFieldCell"; title = "System Product Name"; ObjectID = "baG-Ud-vWe"; */
"baG-Ud-vWe.title" = "System Product Name";

/* Class = "NSButtonCell"; title = "MaxBIOSVersion"; ObjectID = "cFo-d3-10A"; */
"cFo-d3-10A.title" = "MaxBIOSVersion";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Version\nDescription: Board version number. Varies, may match SystemProductName or SystemProductVersion."; ObjectID = "cWR-8m-2Jn"; */
"cWR-8m-2Jn.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Version\nDescription: Board version number. Varies, may match SystemProductName or SystemProductVersion.";

/* Class = "NSTextFieldCell"; title = "InitialTSC"; ObjectID = "dDc-Pn-pL2"; */
"dDc-Pn-pL2.title" = "InitialTSC";

/* Class = "NSTextFieldCell"; title = "Chassis"; ObjectID = "deV-WE-QcF"; */
"deV-WE-QcF.title" = "Chassis";

/* Class = "NSTextFieldCell"; title = "System"; ObjectID = "e0A-vD-ufi"; */
"e0A-vD-ufi.title" = "System";

/* Class = "NSTextFieldCell"; title = "DataWidth"; ObjectID = "e58-CU-R3q"; */
"e58-CU-R3q.title" = "DataWidth";

/* Class = "NSTableColumn"; headerCell.title = "Manufacturer"; ObjectID = "e8B-2J-n0w"; */
"e8B-2J-n0w.headerCell.title" = "Manufacturer";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Version Description: Should match BoardProduct."; ObjectID = "eGy-sp-yaM"; */
"eGy-sp-yaM.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Version Description: Should match BoardProduct.";

/* Class = "NSTabViewItem"; label = "Memory"; ObjectID = "ecE-11-C0P"; */
"ecE-11-C0P.label" = "Memory";

/* Class = "NSSegmentedCell"; eez-pY-d3O.ibShadowedLabels[0] = "Mac"; ObjectID = "eez-pY-d3O"; */
"eez-pY-d3O.ibShadowedLabels[0]" = "Mac";

/* Class = "NSSegmentedCell"; eez-pY-d3O.ibShadowedLabels[1] = "Hack"; ObjectID = "eez-pY-d3O"; */
"eez-pY-d3O.ibShadowedLabels[1]" = "Hack";

/* Class = "NSButtonCell"; title = "Update Firmware Only"; ObjectID = "fU3-BB-2dv"; */
"fU3-BB-2dv.title" = "Update Firmware Only";

/* Class = "NSButtonCell"; title = "Add this section in config.plist"; ObjectID = "fWq-dP-cDy"; */
"fWq-dP-cDy.title" = "Add this section in config.plist";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer\nFailsafe: 0 (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Type\nDescription: Chassis type, refer to Table 17 — System Enclosure or Chassis Types for more details."; ObjectID = "frw-3J-2Cg"; */
"frw-3J-2Cg.ibShadowedToolTip" = "Type: plist integer\nFailsafe: 0 (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Type\nDescription: Chassis type, refer to Table 17 — System Enclosure or Chassis Types for more details.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string, GUID\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — UUID\nDescription: A UUID is an identifier that is designed to be unique across both time and space. It requires no central registration process."; ObjectID = "fux-7e-g2r"; */
"fux-7e-g2r.ibShadowedToolTip" = "Type: plist string, GUID\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — UUID\nDescription: A UUID is an identifier that is designed to be unique across both time and space. It requires no central registration process.";

/* Class = "NSButtonCell"; title = "Synchronous"; ObjectID = "fzR-ns-Nmh"; */
"fzR-ns-Nmh.title" = "Synchronous";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Version Description: Should match SystemSerialNumber."; ObjectID = "gTB-8E-Nin"; */
"gTB-8E-Nin.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Enclosure or Chassis (Type 3) — Version Description: Should match SystemSerialNumber.";

/* Class = "NSButtonCell"; title = "Unknown"; ObjectID = "gVq-zr-fCy"; */
"gVq-zr-fCy.title" = "Unknown";

/* Class = "NSButtonCell"; title = "Unbuffered (unregistered)"; ObjectID = "go3-WJ-YA1"; */
"go3-WJ-YA1.title" = "Unbuffered (unregistered)";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Manufacturer\nDescription: OEM manufacturer of the particular board. Use failsafe unless strictly required. Do not override to contain Apple Inc. on non-Apple hardware, as this confuses numerous services present in the operating system, such as firmware updates, eficheck, as well as kernel extensions developed in Acidanthera, such as Lilu and its plugins. In addition it will also make some operating systems such as Linux unbootable."; ObjectID = "gqH-S3-VMd"; */
"gqH-S3-VMd.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1) — Manufacturer\nDescription: OEM manufacturer of the particular board. Use failsafe unless strictly required. Do not override to contain Apple Inc. on non-Apple hardware, as this confuses numerous services present in the operating system, such as firmware updates, eficheck, as well as kernel extensions developed in Acidanthera, such as Lilu and its plugins. In addition it will also make some operating systems such as Linux unbootable.";

/* Class = "NSButtonCell"; title = "SpoofVendor"; ObjectID = "gyz-Gt-IQK"; */
"gyz-Gt-IQK.title" = "SpoofVendor";

/* Class = "NSTextFieldCell"; title = "Manufacturer"; ObjectID = "gzt-RV-VqZ"; */
"gzt-RV-VqZ.title" = "Manufacturer";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — BIOS Version\nDescription: Firmware version. This value gets updated and takes part in update delivery configuration and macOS version compatibility. This value could look like MM71.88Z.0234.B00.1809171422 in older firmware, and is described in BiosId.h. In newer firmware it should look like 236.0.0.0.0 or 220.230.16.0.0 (iBridge: 16.16.2542.0.0,0). iBridge version is read from BridgeOSVersion variable, and is only present on macs with T2."; ObjectID = "h4J-NQ-LcH"; */
"h4J-NQ-LcH.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: BIOS Information (Type 0) — BIOS Version\nDescription: Firmware version. This value gets updated and takes part in update delivery configuration and macOS version compatibility. This value could look like MM71.88Z.0234.B00.1809171422 in older firmware, and is described in BiosId.h. In newer firmware it should look like 236.0.0.0.0 or 220.230.16.0.0 (iBridge: 16.16.2542.0.0,0). iBridge version is read from BridgeOSVersion variable, and is only present on macs with T2.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets board-id in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS BoardProduct in ASCII."; ObjectID = "h7z-Be-rOD"; */
"h7z-Be-rOD.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets board-id in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS BoardProduct in ASCII.";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Type: plist integer, 8-bit\nFailsafe: 0x03\nSMBIOS: Physical Memory Array (Type 16) — Memory Error Correction\nDescription: Specifies the primary hardware error correction or detection method supported by the memory.\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x03 — None\n• 0x04 — Parity\n• 0x05 — Single-bit ECC\n• 0x06 — Multi-bit ECC\n• 0x07 — CRC"; ObjectID = "hF3-5Q-b46"; */
"hF3-5Q-b46.ibShadowedToolTip" = "Type: plist integer, 8-bit\nFailsafe: 0x03\nSMBIOS: Physical Memory Array (Type 16) — Memory Error Correction\nDescription: Specifies the primary hardware error correction or detection method supported by the memory.\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x03 — None\n• 0x04 — Parity\n• 0x05 — Single-bit ECC\n• 0x06 — Multi-bit ECC\n• 0x07 — CRC";

/* Class = "NSTextFieldCell"; title = "Type"; ObjectID = "hOi-c7-jOJ"; */
"hOi-c7-jOJ.title" = "Type";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Type: plist integer, 8-bit\nFailsafe: 0x02\nSMBIOS: Memory Device (Type 17) — Form Factor\nDescription: Specifies the form factor of the memory. \n\nOn Macs, this should typically be DIMM or SODIMM. Commonly used form factors are listed below.\n\nWhen CustomMemory is false, this value is automatically set based on Mac product name.\n\nWhen Automatic is true, the original value from the the corresponding Mac model will be set if available. Otherwise, the value from OcMacInfoLib will be set. When Automatic is false, a user-specified value will be set if available. Otherwise, the original value from the firmware will be set. If no value is provided, the fallback value (zero) will be set.\n\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x09 — DIMM\n• 0x0D — SODIMM\n• 0x0F — FB-DIMM"; ObjectID = "haT-n9-1ut"; */
"haT-n9-1ut.ibShadowedToolTip" = "Type: plist integer, 8-bit\nFailsafe: 0x02\nSMBIOS: Memory Device (Type 17) — Form Factor\nDescription: Specifies the form factor of the memory. \n\nOn Macs, this should typically be DIMM or SODIMM. Commonly used form factors are listed below.\n\nWhen CustomMemory is false, this value is automatically set based on Mac product name.\n\nWhen Automatic is true, the original value from the the corresponding Mac model will be set if available. Otherwise, the value from OcMacInfoLib will be set. When Automatic is false, a user-specified value will be set if available. Otherwise, the original value from the firmware will be set. If no value is provided, the fallback value (zero) will be set.\n\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x09 — DIMM\n• 0x0D — SODIMM\n• 0x0F — FB-DIMM";

/* Class = "NSTextFieldCell"; title = "MLB"; ObjectID = "hxm-Qi-SkM"; */
"hxm-Qi-SkM.title" = "MLB";

/* Class = "NSButtonCell"; title = "Generate"; ObjectID = "iJ4-50-puj"; */
"iJ4-50-puj.title" = "Generate";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 8 bytes\nFailsafe: 0 (OEM specified on Apple hardware, 0 otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE128 - FirmwareFeaturesMask and ExtendedFirmwareFeaturesMask Description: Supported bits of extended firmware features bitmask. Refer to AppleFeatures.h for more details. Lower 32 bits match FirmwareFeaturesMask. Upper 64 bits match ExtendedFirmwareFeaturesMask."; ObjectID = "ih3-wv-2Kc"; */
"ih3-wv-2Kc.ibShadowedToolTip" = "Type: plist data, 8 bytes\nFailsafe: 0 (OEM specified on Apple hardware, 0 otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE128 - FirmwareFeaturesMask and ExtendedFirmwareFeaturesMask Description: Supported bits of extended firmware features bitmask. Refer to AppleFeatures.h for more details. Lower 32 bits match FirmwareFeaturesMask. Upper 64 bits match ExtendedFirmwareFeaturesMask.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string, GUID\nFailsafe: Empty (Not installed)\nDescription: Sets system-id in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemUUID."; ObjectID = "iip-zN-Jsb"; */
"iip-zN-Jsb.ibShadowedToolTip" = "Type: plist string, GUID\nFailsafe: Empty (Not installed)\nDescription: Sets system-id in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemUUID.";

/* Class = "NSTextFieldCell"; title = "Product"; ObjectID = "j1k-Mi-kEe"; */
"j1k-Mi-kEe.title" = "Product";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string, GUID\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemUUID.\n\nSpecify special string value OEM to extract current value from NVRAM (system-id variable) or SMBIOS and use it throughout the sections. Since not every firmware implementation has valid (and unique) values, this feature is not applicable to some setups, and may provide unexpected results. It is highly recommended to specify the UUID explicitly. Refer to UseRawUuidEncoding to determine how SMBIOS value is parsed."; ObjectID = "jaL-um-8Nb"; */
"jaL-um-8Nb.ibShadowedToolTip" = "Type: plist string, GUID\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemUUID.\n\nSpecify special string value OEM to extract current value from NVRAM (system-id variable) or SMBIOS and use it throughout the sections. Since not every firmware implementation has valid (and unique) values, this feature is not applicable to some setups, and may provide unexpected results. It is highly recommended to specify the UUID explicitly. Refer to UseRawUuidEncoding to determine how SMBIOS value is parsed.";

/* Class = "NSTextFieldCell"; title = "SmcBranch"; ObjectID = "jm3-qG-kzP"; */
"jm3-qG-kzP.title" = "SmcBranch";

/* Class = "NSTextFieldCell"; title = "Manufacturer"; ObjectID = "jzf-Ga-G68"; */
"jzf-Ga-G68.title" = "Manufacturer";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 16-bit\nFailsafe: 0x4\nSMBIOS: Memory Device (Type 17) — Type Detail\nDescription: Specifies additional memory type information.\n• Bit 0 — Reserved, set to 0\n• Bit 1 — Other\n• Bit 2 — Unknown\n• Bit 7 — Synchronous\n• Bit 13 — Registered (buffered)\n• Bit 14 — Unbuffered (unregistered)"; ObjectID = "kmI-CT-lAM"; */
"kmI-CT-lAM.ibShadowedToolTip" = "Type: plist integer, 16-bit\nFailsafe: 0x4\nSMBIOS: Memory Device (Type 17) — Type Detail\nDescription: Specifies additional memory type information.\n• Bit 0 — Reserved, set to 0\n• Bit 1 — Other\n• Bit 2 — Unknown\n• Bit 7 — Synchronous\n• Bit 13 — Registered (buffered)\n• Bit 14 — Unbuffered (unregistered)";

/* Class = "NSTextFieldCell"; title = "ProcessorType"; ObjectID = "kwQ-r3-1fQ"; */
"kwQ-r3-1fQ.title" = "ProcessorType";

/* Class = "NSTextFieldCell"; title = "Version"; ObjectID = "l5R-bG-c9M"; */
"l5R-bG-c9M.title" = "Version";

/* Class = "NSButtonCell"; title = "Add this section in config.plist"; ObjectID = "lvE-6L-IGl"; */
"lvE-6L-IGl.title" = "Add this section in config.plist";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Manufacturer Description: Board manufacturer. All rules of SystemManufacturer do apply."; ObjectID = "mON-cg-FYL"; */
"mON-cg-FYL.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) - Manufacturer Description: Board manufacturer. All rules of SystemManufacturer do apply.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemSerialNumber.\n\nSpecify special string value OEM to extract current value from NVRAM (SSN variable) or SMBIOS and use it throughout the sections. This feature can only be used on Mac-compatible firmware."; ObjectID = "mPV-Tv-466"; */
"mPV-Tv-466.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS SystemSerialNumber.\n\nSpecify special string value OEM to extract current value from NVRAM (SSN variable) or SMBIOS and use it throughout the sections. This feature can only be used on Mac-compatible firmware.";

/* Class = "NSTextFieldCell"; title = "BID"; ObjectID = "mqi-pJ-IwL"; */
"mqi-pJ-IwL.title" = "BID";

/* Class = "NSTextFieldCell"; title = "SmcRevision"; ObjectID = "o2A-1V-M8O"; */
"o2A-1V-M8O.title" = "SmcRevision";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets Model in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemProductName in Unicode."; ObjectID = "o9h-XT-hbD"; */
"o9h-XT-hbD.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (Not installed)\nDescription: Sets Model in gEfiMiscSubClassGuid. The value found on Macs is equal to SMBIOS SystemProductName in Unicode.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 16 bytes\nFailsafe: All zero  (OEM specified on Apple hardware, do not provide the table otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE134 - Version\nDescription: ASCII string containing SMC version in upper case. Missing on T2 based Macs."; ObjectID = "oMm-l1-RDC"; */
"oMm-l1-RDC.ibShadowedToolTip" = "Type: plist data, 16 bytes\nFailsafe: All zero  (OEM specified on Apple hardware, do not provide the table otherwise)\nSMBIOS: APPLE_SMBIOS_TABLE_TYPE134 - Version\nDescription: ASCII string containing SMC version in upper case. Missing on T2 based Macs.";

/* Class = "NSButtonCell"; title = "CustomMemory"; ObjectID = "olD-tN-2HW"; */
"olD-tN-2HW.title" = "CustomMemory";

/* Class = "NSTextFieldCell"; title = "SmcPlatform"; ObjectID = "p5r-L2-V0b"; */
"p5r-L2-V0b.title" = "SmcPlatform";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1), Product Name\nDescription: Preferred Mac model used to mark the device as supported by the operating system. This value must be specified by any configuration for later automatic generation of the related values in this and other SMBIOS tables and related configuration parameters. If SystemProductName is not compatible with the target operating system, -no_compat_check boot argument may be used as an override.\n\nNote: If SystemProductName is unknown, and related fields are unspecified, default values should be assumed as being set to MacPro6,1 data. The list of known products can be found in AppleModels."; ObjectID = "p9S-yK-fiz"; */
"p9S-yK-fiz.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: System Information (Type 1), Product Name\nDescription: Preferred Mac model used to mark the device as supported by the operating system. This value must be specified by any configuration for later automatic generation of the related values in this and other SMBIOS tables and related configuration parameters. If SystemProductName is not compatible with the target operating system, -no_compat_check boot argument may be used as an override.\n\nNote: If SystemProductName is unknown, and related fields are unspecified, default values should be assumed as being set to MacPro6,1 data. The list of known products can be found in AppleModels.";

/* Class = "NSTextFieldCell"; title = "Family"; ObjectID = "pbb-64-p0X"; */
"pbb-64-p0X.title" = "Family";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 64-bit\nFailsafe: 0 (Automatic)\nDescription: Sets ARTFrequency in gEfiProcessorSubClassGuid. \n\nThis value contains CPU ART frequency, also known as crystal clock frequency. Its existence is exclusive to the Skylake generation and newer. The value is specified in Hz, and is normally 24 MHz for the client Intel segment, 25 MHz for the server Intel segment, and 19.2 MHz for Intel Atom CPUs. macOS till 10.15 inclusive assumes 24 MHz by default.\n\nNote: On Intel Skylake X ART frequency may be a little less (approx. 0.25%) than 24 or 25 MHz due to special EMI-reduction circuit."; ObjectID = "qOV-63-yas"; */
"qOV-63-yas.ibShadowedToolTip" = "Type: plist integer, 64-bit\nFailsafe: 0 (Automatic)\nDescription: Sets ARTFrequency in gEfiProcessorSubClassGuid. \n\nThis value contains CPU ART frequency, also known as crystal clock frequency. Its existence is exclusive to the Skylake generation and newer. The value is specified in Hz, and is normally 24 MHz for the client Intel segment, 25 MHz for the server Intel segment, and 19.2 MHz for Intel Atom CPUs. macOS till 10.15 inclusive assumes 24 MHz by default.\n\nNote: On Intel Skylake X ART frequency may be a little less (approx. 0.25%) than 24 or 25 MHz due to special EMI-reduction circuit.";

/* Class = "NSTextFieldCell"; title = "Firmware"; ObjectID = "qoc-xS-eEN"; */
"qoc-xS-eEN.title" = "Firmware";

/* Class = "NSTextFieldCell"; title = "System Serial Number"; ObjectID = "quh-uV-8rJ"; */
"quh-uV-8rJ.title" = "System Serial Number";

/* Class = "NSTextFieldCell"; title = "Type"; ObjectID = "r88-HH-Xe8"; */
"r88-HH-Xe8.title" = "Type";

/* Class = "NSTextFieldCell"; title = "Asset Tag"; ObjectID = "rL4-uJ-e4c"; */
"rL4-uJ-e4c.title" = "Asset Tag";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS BoardSerialNumber.\n\nSpecify special string value OEM to extract current value from NVRAM (MLB variable) or SMBIOS and use it throughout the sections. This feature can only be used on Mac-compatible firmware."; ObjectID = "rLa-T9-n6A"; */
"rLa-T9-n6A.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified or not installed)\nDescription: Refer to SMBIOS BoardSerialNumber.\n\nSpecify special string value OEM to extract current value from NVRAM (MLB variable) or SMBIOS and use it throughout the sections. This feature can only be used on Mac-compatible firmware.";

/* Class = "NSBox"; title = "Box"; ObjectID = "rjU-uH-nCF"; */
"rjU-uH-nCF.title" = "Box";

/* Class = "NSTextFieldCell"; title = "TotalWidth"; ObjectID = "rk2-HO-2cZ"; */
"rk2-HO-2cZ.title" = "TotalWidth";

/* Class = "NSTextFieldCell"; title = "ProcessorType"; ObjectID = "sTq-fo-o3l"; */
"sTq-fo-o3l.title" = "ProcessorType";

/* Class = "NSTextFieldCell"; title = "System Serial Number"; ObjectID = "sXU-di-o5I"; */
"sXU-di-o5I.title" = "System Serial Number";

/* Class = "NSTextFieldCell"; title = "ROM"; ObjectID = "t2F-TN-y72"; */
"t2F-TN-y72.title" = "ROM";

/* Class = "NSTextFieldCell"; title = "TypeDetail"; ObjectID = "vni-Gi-O0Q"; */
"vni-Gi-O0Q.title" = "TypeDetail";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 1 byte\nFailsafe: 0\nDescription: Sets board-rev in gEfiMiscSubClassGuid. The value found on Macs seems to correspond to internal board revision (e.g. 01)."; ObjectID = "vrV-lt-VAU"; */
"vrV-lt-VAU.ibShadowedToolTip" = "Type: plist data, 1 byte\nFailsafe: 0\nDescription: Sets board-rev in gEfiMiscSubClassGuid. The value found on Macs seems to correspond to internal board revision (e.g. 01).";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Type: plist integer, 8-bit\nFailsafe: 0x02\nSMBIOS: Memory Device (Type 17) — Memory Type\nDescription: Specifies the memory type. Commonly used types are listed below.\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x0F — SDRAM\n• 0x12 — DDR\n• 0x13 — DDR2\n• 0x14 — DDR2 FB-DIMM\n• 0x18 — DDR3\n• 0x1A — DDR4\n• 0x1B — LPDDR\n• 0x1C — LPDDR2\n• 0x1D — LPDDR3\n• 0x1E — LPDDR4"; ObjectID = "w6I-Xj-IPK"; */
"w6I-Xj-IPK.ibShadowedToolTip" = "Type: plist integer, 8-bit\nFailsafe: 0x02\nSMBIOS: Memory Device (Type 17) — Memory Type\nDescription: Specifies the memory type. Commonly used types are listed below.\n• 0x01 — Other\n• 0x02 — Unknown\n• 0x0F — SDRAM\n• 0x12 — DDR\n• 0x13 — DDR2\n• 0x14 — DDR2 FB-DIMM\n• 0x18 — DDR3\n• 0x1A — DDR4\n• 0x1B — LPDDR\n• 0x1C — LPDDR2\n• 0x1D — LPDDR3\n• 0x1E — LPDDR4";

/* Class = "NSTextFieldCell"; title = "FSBFrequency"; ObjectID = "wVQ-fG-k75"; */
"wVQ-fG-k75.title" = "FSBFrequency";

/* Class = "NSTextFieldCell"; title = "Serial Number"; ObjectID = "wqB-YC-Vht"; */
"wqB-YC-Vht.title" = "Serial Number";

/* Class = "NSTextFieldCell"; title = "Type"; ObjectID = "x5o-Jb-Da4"; */
"x5o-Jb-Da4.title" = "Type";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Serial Number\nDescription: Board serial number in defined format. Known formats are described in macserial."; ObjectID = "xDD-P3-Saq"; */
"xDD-P3-Saq.ibShadowedToolTip" = "Type: plist string\nFailsafe: Empty (OEM specified)\nSMBIOS: Baseboard (or Module) Information (Type 2) — Serial Number\nDescription: Board serial number in defined format. Known formats are described in macserial.";

/* Class = "NSTableColumn"; headerCell.title = "PartNumber"; ObjectID = "yFd-un-G1B"; */
"yFd-un-G1B.headerCell.title" = "PartNumber";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 32-bit\nFailsafe: 0 (Not installed)\nDescription: Sets DevicePathsSupported in gEfiMiscSubClassGuid. Must be set to 01 for AppleACPIPlat- form.kext to append SATA device paths to Boot#### and efi-boot-device-data variables. Set to 01 on all modern Macs."; ObjectID = "yKq-oF-Y1T"; */
"yKq-oF-Y1T.ibShadowedToolTip" = "Type: plist integer, 32-bit\nFailsafe: 0 (Not installed)\nDescription: Sets DevicePathsSupported in gEfiMiscSubClassGuid. Must be set to 01 for AppleACPIPlat- form.kext to append SATA device paths to Boot#### and efi-boot-device-data variables. Set to 01 on all modern Macs.";

/* Class = "NSTableColumn"; headerCell.title = "BankLocator"; ObjectID = "yXa-IP-XI4"; */
"yXa-IP-XI4.headerCell.title" = "BankLocator";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist data, 6 bytes\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_ROM and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM"; ObjectID = "yhE-PH-xkY"; */
"yhE-PH-xkY.ibShadowedToolTip" = "Type: plist data, 6 bytes\nFailsafe: Empty (Not installed)\nDescription: Specifies the values of NVRAM variables 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:HW_ROM and 4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM";

/* Class = "NSTableColumn"; headerCell.title = "AssetTag"; ObjectID = "yms-EA-Jpq"; */
"yms-EA-Jpq.headerCell.title" = "AssetTag";

/* Class = "NSTextFieldCell"; title = "Firmware Features"; ObjectID = "z92-Rg-GSY"; */
"z92-Rg-GSY.title" = "Firmware Features";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Update NVRAM fields related to platform information.\n\nThese fields are read from the Generic or PlatformNVRAM sections depending on the setting of the Automatic property. All the other fields are to be specified with the NVRAM section.\n\nIf UpdateNVRAM is set to false, the aforementioned variables can be updated with the NVRAM section. If UpdateNVRAM is set to true, the behaviour is undefined when any of the fields are present in the NVRAM section."; ObjectID = "zXC-sw-kEf"; */
"zXC-sw-kEf.ibShadowedToolTip" = "Type: plist boolean\nFailsafe: false\nDescription: Update NVRAM fields related to platform information.\n\nThese fields are read from the Generic or PlatformNVRAM sections depending on the setting of the Automatic property. All the other fields are to be specified with the NVRAM section.\n\nIf UpdateNVRAM is set to false, the aforementioned variables can be updated with the NVRAM section. If UpdateNVRAM is set to true, the behaviour is undefined when any of the fields are present in the NVRAM section.";

/* Class = "NSTextField"; ibShadowedToolTip = "Type: plist integer, 16-bit\nFailsafe: 0xFFFF (unknown)\nSMBIOS: Memory Device (Type 17) — Data Width\nDescription: Specifies the data width, in bits, of the memory. A DataWidth of 0 and a TotalWidth of 8 indicates that the device is being used solely to provide 8 error-correction bits."; ObjectID = "zev-9o-4NS"; */
"zev-9o-4NS.ibShadowedToolTip" = "Type: plist integer, 16-bit\nFailsafe: 0xFFFF (unknown)\nSMBIOS: Memory Device (Type 17) — Data Width\nDescription: Specifies the data width, in bits, of the memory. A DataWidth of 0 and a TotalWidth of 8 indicates that the device is being used solely to provide 8 error-correction bits.";
